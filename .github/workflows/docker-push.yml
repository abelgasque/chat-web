name: Build and Deploy
on:
  push:
    branches:
      - develop

jobs:
  build:
    name: Build Application
    runs-on: ubuntu-latest
    environment: production
    steps:
    - name: Checkout Code
      uses: actions/checkout@v2

    - name: Notify Discord (Build Started)
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot GitHub", "content": "üöÄ **Build iniciado!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }} || true

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build and push Docker image (branch develop)
      if: github.ref == 'refs/heads/develop'
      run: |
        docker build --platform=linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/chat-web:latest .
        docker push ${{ secrets.DOCKER_USERNAME }}/chat-web:latest
      env:
        APP_DEBUG: production
        APP_VERSION: ${{ github.ref_name }} 
        APP_NAME: ${{ github.repository }}
        APP_DESCRIPTION: Description
        APP_BASE_URL: ${{ secrets.APP_BASE_URL }}
        SUPERSET_BASE_URL: ${{ secrets.SUPERSET_BASE_URL }}
        SUPERSET_EMBED_ADMIN_ID: ${{ secrets.SUPERSET_EMBED_ADMIN_ID }}

    - name: Build and push Docker image (tagged release)
      if: startsWith(github.ref, 'refs/tags/')
      run: |
        docker build --platform=linux/amd64 -t ${{ secrets.DOCKER_USERNAME }}/chat-web:${{ github.ref_name }} .
        docker push ${{ secrets.DOCKER_USERNAME }}/chat-web:${{ github.ref_name }}
      env:
        APP_DEBUG: production
        APP_VERSION: ${{ github.ref_name }} 
        APP_NAME: ${{ github.repository }}
        APP_DESCRIPTION: Description
        APP_BASE_URL: ${{ secrets.APP_BASE_URL }}
        SUPERSET_BASE_URL: ${{ secrets.SUPERSET_BASE_URL }}
        SUPERSET_EMBED_ADMIN_ID: ${{ secrets.SUPERSET_EMBED_ADMIN_ID }}
  report-status:
    name: Report Build Status
    needs: build
    environment: production
    runs-on: ubuntu-latest

    steps:
    - name: Notify Discord (Success)
      if: success()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot Github", "content": "‚úÖ **Sucesso ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }}

    - name: Notify Discord (Failure)
      if: failure()
      run: |
        curl -H "Content-Type: application/json" \
        -X POST \
        -d '{"username": "Bot Github", "content": "‚ùå **Falha ao gerar vers√£o!**\nReposit√≥rio: `${{ github.repository }}`\nAmbiente: Produ√ß√£o\nBranch: `${{ github.ref_name }}`"}' \
        ${{ secrets.DISCORD_WEBHOOK_URL }}